name: Build and test Spring Boot API
on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    name: API packaging
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Maven Package
        run: mvn -B clean package -DskipTests

  test:
    name: API testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Install Newman
        run: |
          npm install -g newman

      - name: Run Spring Boot application as a localhost server
        run: |
          mvn clean package spring-boot:start

      - name: Run Postman tests on Spring Boot server
        run: |
          newman run "src/test/postman/api.metadata.json"
          newman run "src/test/postman/api.main.json"

      - name: Launch Angular front-end
        run: |
          cd front
          npm install
          npm run start & npx wait-on http://localhost:4200

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: bootiful-antigady/bootiful-app-antigady:latest
          context: .
          file: Dockerfile

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Mpil2022_tp-bootiful-tests-api-anti-gady
